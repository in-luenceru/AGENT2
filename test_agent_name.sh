#!/bin/bash

# Test script for agent name configuration
cd /workspaces/AGENT2

# Set up environment
export AGENT_NAME="security-monitoring-agent-001"
export MANAGER_IP="172.17.0.2"
export MANAGER_PORT="1514"
export MANAGER_PROTOCOL="tcp"
export AGENT_GROUPS="production"
export WAZUH_HOME="/workspaces/AGENT2"

# Test configuration generation
echo "=== Testing Configuration Generation ==="
echo "Agent Name: $AGENT_NAME"
echo "Manager IP: $MANAGER_IP"

# Create a simple test config
AGENT_CONF="./test_ossec.conf"

cat > "$AGENT_CONF" << EOF
<!--
  Test Agent Configuration
  Generated by test script
  Mode: Production
-->

<ossec_config>
  <client>
    <server>
      <address>$MANAGER_IP</address>
      <port>$MANAGER_PORT</port>
      <protocol>$MANAGER_PROTOCOL</protocol>
    </server>
    <config-profile>generic</config-profile>
    <notify_time>60</notify_time>
    <time-reconnect>300</time-reconnect>
    <auto_restart>yes</auto_restart>
    <crypto_method>aes</crypto_method>
    <enrollment>
      <enabled>yes</enabled>
      <manager_address>$MANAGER_IP</manager_address>
      <agent_name>$AGENT_NAME</agent_name>
      <groups>$AGENT_GROUPS</groups>
    </enrollment>
  </client>

  <logging>
    <log_format>plain</log_format>
  </logging>
</ossec_config>
EOF

echo "Configuration created:"
cat "$AGENT_CONF"

echo ""
echo "=== Testing Agent Name Extraction ==="

# Test agent name extraction
config_agent_name=$(grep -A 10 "<enrollment>" "$AGENT_CONF" | grep "<agent_name>" | sed 's/.*<agent_name>\(.*\)<\/agent_name>.*/\1/' | tr -d '[:space:]')
echo "Extracted agent name from config: '$config_agent_name'"

if [[ "$config_agent_name" == "$AGENT_NAME" ]]; then
    echo "✓ Agent name correctly configured and extracted"
else
    echo "✗ Agent name mismatch. Expected: '$AGENT_NAME', Got: '$config_agent_name'"
fi

# Clean up
rm -f "$AGENT_CONF"